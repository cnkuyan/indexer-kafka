spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms: 1000

spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde:org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde:org.apache.kafka.common.serialization.Serdes$StringSerde

spring.cloud.stream.bindings.process-out-0:
  destination: product-counts
spring.cloud.stream.bindings.process-in-0:
  destination: products

spring.cloud.stream.bindings.processticks-out-0:
  destination: tick-stats
spring.cloud.stream.bindings.processticks-in-0:
  destination: ticks

#spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde:org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde:org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

#spring.cloud.stream.kafka.streams.bindings.processticks-in-0.producer.value-serde:org.springframework.kafka.support.serializer.JsonSerializer
#spring.cloud.stream.kafka.streams.bindings.pco.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde

spring:
  cloud:
    stream:
      function:
        definition: processticks # tick stats
        #definition: process # product count
  kafka:
    bootstrap-servers: localhost:9092


spring.application.name: kafka-streams-product-tracker-sample


